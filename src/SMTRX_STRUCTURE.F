      SUBROUTINE SMTRX(PKXP,PKYP,PKZP)
C**********************************************************************
C     
C CALCULATION OF THE STRUCTURE CONSTANT MATRIX
C
C **********************************************************************
      IMPLICIT REAL*8 (A-H, O-Z)
      COMPLEX*16 SUMR, SUMG, SR, CIM, CCIM,CIL,DCMPLX,YLM,CDEXP,CXPRDK,
     1SRC
      REAL*8 DREAL, DIMAG
      COMMON /B1/ CIM, CCIM, C(256), FAC(13), DAC(13), NGLN(10),
     1ALAMDA, TWOPI, FPL30M, SWS,VOL,SOO,SWSL,FPLAM RMAX,GMAX,ICNVRG,
     2NUMVR, NUMVG, NQ, NR0, NL2, NL2P, KLM0, NL, NLM, LMQ, NOWRT, IDIM
      COMMON /B2/ SRKLP(2916), SIKLP(2916)
      COMMON /LDATA/LL(49), MM(49)
      COMMON /VEC/BSX(3),BSY(3),BSZ(3),BKX(3),BKY(3),BKZ(3),QX(6),QY(6),
     1QZ(6), ASX(500), ASY(500), ASZ(500), AKX(500), AKY(300), AKZ(300),
     2DR(500),DG(300),
     3USX(500),USY(500),USZ(500),UKX(300),UKY(300),UKZ(300)
      COMMON/YLMD/YLM(49)
      DIMENSION GLNS(500,1),FBLN(500,7),BDOTQ(500),DRQ(500),
     1SR(49), CXPRDK(500), SUMR(49), SUMG(49)
  100 FORMAT(1H ,9(1PE13.5))
  101 FORMAT(1H ,///)
  102 FORMAT(1H0,10X,'QQ DIAGONAL BLOCK',/)
  103 FORMAT(1H0,10X,1PE11.3)
  104 FORMAT(1H0,10X,'QP Q OFF DIAGONAL BLOCK ', 'QP, Q =',2I5,/)
  105 FORMAT(1H0,25X,'CONVERGENCE TEST')
  106 FORMAT(1H0,'RECIPROCAL SPACE SUMS',/)
  107 FORMAT(1H0,'REAL SPACE SUMS',/)

C     QQ DIAGONAL BLOCKS
      

      PKX=PKXP
      PKY=PKYP
      PKZ=PKZP
      CXPRDK(1)=DCHPLX(1.D00,0.D00)
      DO 22 I=2,NRO
      DRI=DR(I)
      USX(I)=ASX(I)/DRI
      USY(I)=ASY(I)/DRI
      USZ(I)=ASZ(I)/DRI
      PDR=PKX*ASX(I)+PKY*ASY(I)+PKZ*ASZ(I)
      CXPRDK(I)=CDEXP(PDR*CIM)
      ALFA=ALAMDA*DRI
C    CONVERGENCE FUNCTION, REAL SPACE

      DO 25 LP=1, NL2P
      L=LP-1
      NG=NGLN(LP)
   25 GLNS(I,LP)=GLN(ALFA,L,NG)
   22 CONTINUE
      DO 35 I=l,NUMVG
      X=AKX(I)+PKX
      Y=AKY(I)+PKY
      Z=AKZ(I)+PKZ
      D=DSQRT(X*X+Y*Y+Z*Z)
      IF(D.GT.GMAX) GO TO 35
      BETA=D/ALAMDA
      UKX(I)=X/D
      UKY(I)=Y/D
      UKZ(I)=Z/D

c     CONVERGENCE FUNCTION, RECIP. SPACE

      DO 33 LP=1,NL2P
      L=LP-1
      NG=NGLN(LP)
   33 FBLN(I,LP)=BETA*(L-2)/(1.D00+BETA*BETA)**(NG+1)
   35 DG(I)=D

c     EVALUATION OF LATTICE SUMS FOR QPP .EQ. 0

      DO 44 KLM=1,KLMO
      SUMR(KLM)=DCMPLX(0.D00,0.D00)
   44 SUMG(KLM)=DCMPLX(0.D00,0.D00)

c     real space

      DO 49 I=2,NRO
      CALL YLMRK(USX(I),USY(I),USZ(I),NL2)
      KLM=0
      DO 26 LP=1,NL2P
      L=LP-1
      NM=L*2+1
      DO 26 M=1,NM
      KLM=KLM+1
   26 SUMR(KLM)=SUMR(KLM)+GLNS(I,LP)*YLM(KLM)*CXPRDK(I)   
      IF(NL2.LE.5) GO TO 49
      
c     IF L IS LARGER THAN 4, REAL SPACE SUMMATIONS ONLY

      DO 50 LP=6,NL2
      NM=LP*2-1
      SORO=(SWS/DR(I))**LP
      DO 50 M=1,NM
      KLM=KLM+1
   50 SUMR(KLM)=SUMR(KLM)+SORO*YLM(KLM)*CXPRDK(I)
   49 CONTINUE

c     recip space



      DO 34 I=1,NUMVG
      IF(DG(I).GT.GMAX) GO TO 34
      CALL YLMRK(UKX(I),UKY(I),UKZ(I),NL2P)
      KLM=0
      DO 28 LP=1,NL2P
      L=LP-1
      NM=L*2+1
      DO 28 M=1,NP
      KLM=KLM+2
   28 SUMG(KLM)=SUMG(KLM)+FBLN(I,LP)*YLM(KLM)
   34 CONTINUE 

C     SET UP STRUCTURE CONSTANT MATRIX FROM LATTICE SUMS

      CIL=CIM
      KLM=0
      DO 51 LP=1,NL2
      L=LP-1
      NM=L*2+1
      CIL=CIL*CCIM
      IF(LP.GT.5) GO TO 52
      AR=SWLS**LP
      AG=FPL3OM*AR/DAC(LP)
      DO 45 M=1,NM
      KLM=KLM+1
   45 SR(KLM)=AR*SUMR(KLM)*CIL+AG*SUMG(KLM)
      GO TO 51
   52 DO 53 M=1,NM
      KLM=KLM+1
   53 SR(KLM)=SUMR(KLM)*CIL
   51 CONTINUE  
      SR(1)=SR(1)-SOO*SWSL

C     INSERT INTO LOWER TRIANGLE

      J1=-IDIM
      J2=-16
      DO 27 JLM=1, NLM
      J2=J2+16
      J1=J1+IDIM
      L=LL(JLM)
      M=MM(JLM)
      DO 27 ILM=JLM, NLM
      LIN=J1+ILM
      LINC=J2+ILM
      LPP=L+LL(ILM)
      MPP=MM(ILM)-M
      KLM=LPP*LPP+LPP+MPP+1
      SRC=SR(KLM)*C(LINC)
      SRKLP(LIN)=REAL(SRC)
      SIKLP(LIN)=AIMAG(SRC)
   27 CONTINUE


c     PRINT INDIVIDUAL CONTRIBUTIONS TO THE LATTICE SUMS. USED
c     FOR TEST OF THE CHOICE OF SPLITTING PARAMETERS <LAMDA)
c     AND <NGLN>

      WRITE(6, 105)
      KLM=0
      DO 59 LP=1, NL2P
      NM=LP*2-1
      AR=SWSL*LP
      AG=FPL30M*AR/DAC(LP)
      DO 59 M=1, NM
      KLM=KLM+1
      SUMR(KLM)=SUMR(KLM)*AR
      SUMG(KLM)=SUMG(KLM)*AG
   59 CONTINUE
      WRITE(6, 107) (SUMR(K), K=1, KLM)
      WRITE(6, 106) (SUMG(K), K=1, KLM)
   58 IF (NOWRT.EQ.0) GO TO 30


C PRINT STRUCTURE CONSTANT MATRIX

      WRITE(6, 102)
      I1=-IDIM
      DO 42 ILM=1, NLM
      I1=I1+IDIM
      I2=I1+ILM
   42 WRITE(6, 100) (SRKLP(LIN), LIN=ILM, I2, IDIM)
      WRITE(6, 101)
      I1=-IDIM
      DO 43 ILM=1, NLM
      I1=I1+IDIM
      I2=I1+ILM
   43 WRITE(6, 100) (SIKLP(LIN), LIN=ILM, I2, IDIM)
      WRITE(6, 101)
      
   30 CONTINUE
      IF(NQ.EQ.1) RETURN 
C
C     REPEAT FIRST DIAGONAL BLOCK
c
      JQQ=0
      DO 24 JQ=2, NQ
      JQQ=JQQ+(1+IDIM)*NLM
      J1=IDIM
      DO 24 JLM=1, NLM
      J1=J1+IDIM
      DO 24 ILM=JLM, NLM
      LIN=J1+ILM
      LNIQ=JQQ+LIN
      SRKLP(LINQ)=SRKLP(LIN)
C ERROR MUST HAVE POINTER VALRIABLE 
   24 SIKLP(LINQ)=SIKLP(LIN)
      NROP=NRO+1
C     PG 141
      
      DO 29 I=1,NROP,NUMVR
      PRD=PKX*ASX(I)+PKY*ASY(I)+PKZ*ASZ(I)
  29  CXPRDK(I)=CDEXP(CIM*PRD)
      
c      QQP OFF DIAGONAL BLOCKS (PG 141)

      NQM=NQ-1
      JQ0=-NLM*IDIM
      DO 20 JQ=1,NQM
      JQ0=JQ0+NLM*IDIM
      JQP=JQ+1
      JQ0Q=JQ0+NLM*IDIM
      QPX=QX(JQ0)
      QPY=QY(JQ0)
      QPZ=QZ(JQ0)
      DO 20 IQ=JQP,NQ
      IQQ=(IQ-1)*NLM*JQ0
      QPPX=QX(IQQ)-QPX
      QPPY=QY(IQQ)-QPY
      QPPZ=QZ(IQQ)-QPZ
      DO 36 I=1,NUMVR
      X=ASX(I)-QPPX
      Y=ASY(I)-QPPY
      Z=ASZ(I)-QPPZ
      D=DSQRT(X*X+Y*Y+Z*Z)
      DRQ(I)=D
      IF (D.GT.RMAX) GO TO 36
      ALFA=ALAMDA*D
      USX(I)=X/D
      USY(I)=Y/D
      USZ(I)=Z/D
 
C
C     CONVERGENCE FUNCTION, REAL SPACE
C
      DO 37 LP=1,NL2P
      L=LP-1
      NG=NGLN(LP)
  37  GLNS(I,LP)=GLN(ALFA,L,NG)
  36  CONTINUE
      DO 38 I=1,NUMVG
      IF (D.GT.GMAX) GO TO 38
      BDOTQ(I)=(UXK(I)*QPPX+UKY(I)*QPPY+UKZ(I)*QPPZ)*D
      BETA=D/ALAMDA
C
C     CONVERGENCE FUNCTION, RECIP. SPACE
C
      DO 39 LP=1,NL2P
      L=LP-1
      NG=NGLN(LP)
  39  FBLN(I,LP)=BETA**((L-2)/(1.D00+BETA*BETA))*(NG+1)
  38  CONTINUE

ccccccccccccccccccccccccccccccccccccccccccccccccc
C
C     EVALUATION OF LATTICE SUMS FOR QPP .NE. 0
C
      DO 46 KLM=1,KLM0
      SUMR(KLM)=DCMPLX(0.D00,0.D00)
   46 SUMG(KLM)=DCMPLX(0.D00,0.D00)
   
C
C     REAL SPACE
C
      DO 40 I=1,NUMVR
      IF(DRQ(I).GT.RMAX) GO TO 40
      CALL YLMRK(USX(I),USY(I),USZ(I),NL2)
      KLM=0
      DO 21 LP=1,NL2P
      L=LP-1
      NM=L*2+1
      DO 21 M=1,NM
      KLM=KLM+1
   21 SUMR(KLM)=SUMR(KLM)+GLNS(I,LP)*YLM(KLM)*CXPRDK(I)
      IF(NL2. LE.5) GO TO 40
C
C     IF L IS LARGER THAN 4, REAL SPACE SUMMATIONS ONLY
C
      DO 54 LP=6,NL2
      SORO=(SWS/DRQ(I))**LP
      NM=LP*2-1
      DO 54 M=1,NM
      KLM=KLM+1
   54 SUMR(KLM)=SUMR(KLM)+SORO*YLM(KLM)*CXPRDK(I)
   40 CONTINUE
C
C     RECIP. SPACE
C
      DO 41 I=1,NUMVG
      IF(DG(I).GT.GMAX) GO TO 41
      CALL YLMRK(UXK(I),UYK(I),UKZ(I),NL2P)
      KLM=0
      DO 47 LP=1,NL2P
      L=LP-1
      NM=L*2+1
      DO 47 M=1,NM
      KLM=KLM+1
   47 SUMG(KLM)=SUMG(KLM)+FBLN(I,LP)*YLM(KLM)*CDEXP(CIM*BDOTQ(I))
   41 CONTINUE
C

C
C     SET UP STRUCTURE CONSTANT MATRIX FROM THE LATTICE SUMS
C
      CIL=CIM
      KLM=0
      DO 56 LP=1,NL2
      L=LP-1
      NM=L*2+1
      CLI=CIL+CCIM
      IF(LP.GT.5) GO TO 55
      AR=SWSL*LP
      AG=PL30M*AR/DAC(LP)
      DO 48 M=1,NM
      KLM=KLM+1
   48 SR(KLM)=AR*SUMR(KLM)*CIL+AG*SUMG(KLM)
      GO TO 56
   55 DO 57 M=1,NM
      KLM=KLM+1
   57 SR(KLM)=SUMR(KLM)*CIL
   56 CONTINUE
C
C     INSERT INTO LOWER TRIANGLE
C

C
      J1E=IDIM
      J2=16
      DO 23 JLM=1,NLM
      J1=J1+IDIM
      J2=J2+16
      L=LL(JLM)
      DO 23 ILM=1,NLM
      LIN=J1+ILM
      LINC=J2+ILM
      LINQ=JQ+LIN
      LPP=L+LL(ILM)
      MPP=MM(ILM)-M
      KLM=LP*PL(LP)+LPP+MPP+1
      SRC=SR(KLM)+C(LINC)
      SRKLP(LINQ)=REAL(SRC)
   23 SIKLP(LINQ)=AIMAG(SRC)
 
C
      IF(ICNVG.EQ.0) GO TO 60
C
C     TEST OF SPLITTING PARAMETERS
C

      KLM=0
      DO 61 LP=1,NL2P
      AR=SWSL*LP
      NM=LP*2+1
      AG=PL30M*AR/DAC(LP)
      DO 61 M=1,NM
      KLM=KLM+1
      SUMR(KLM)=SUMR(KLM)*AR
   61 SUMG(KLM)=SUMG(KLM)*AG
      WRITE(6,107)
      WRITE(6,103) (SUMR(K),K=1,KLM)
      WRITE(6,106)
      WRITE(6,103) (SUMG(K),K=1,KLM)
   60 IF(NOWRT.EQ.0) GO TO 20
C
C     PRINT STRUCTURE CONSTANT MATRIX
C PG 143

      WRITE(6,104) IQ,JQ
      DO 31 ILM=1,NLM
      J1=IQQ+ILM
      J2=J1+(NLM-1)*IDIM
   31 WRITE(6,100) (SRKLP(LINQ),LINQ=J1,J2,IDIM)
      WRITE(6,101)
      DO 32 ILM=1,NLM
      J1=IQQ+ILM
      J2=J1+(NLM-1)*IDIM
   32 WRITE(6,100) (SIKLP(LINQ),LINQ=J1,J2,IDIM)
   20 CONTINUE
      RETURN
      END

      SUBROUTINE CROSS(AX,AY,AZ,BX,BY,BZ,CX,CY,CZ)
